---
title: "Lab 5: Murder in SQL City"
author: "Amir Sepasian"
editor: source
embed-resources: true
format: 
  html:  
    embed-resources: true
    code-tools: true
    toc: true
execute: 
  echo: true
  warning: false
  message: false
code-fold: true
---

For this lab, you will be joining and filtering related datasets to solve a murder mystery!

## Instructions

Northwestern University's Knight Lab wanted to help sharpen users' database skills, so they created a murder mystery. Can you solve this crime in SQL City??

The relational data you will be working with contains tables with different pieces of information pertinent to the crime - people, social media check-ins, driver's licenses, crime scene reports, police interviews, and more!

![Database schema](https://mystery.knightlab.com/schema.png)

Solve the murder mystery, showing **all of your work in this document**. Your document and code must be well organized, easy to follow, and reproducible.

+ Use headers and written descriptions to indicate what you are doing.
+ Use `dplyr` verbs and `join` functions rather than just looking through the tables manually.
+ Use good code formatting practices.
+ Comment your code.
+ Cite any external sources you use to solve the mystery.

### Tips 

You may find the `pull()` function handy for displaying each clue as you go along.


## Access the Data

This code chunk will read in all of the tables of data for you. Don't modify or remove this!

```{r}
#| message: false
#| warning: false
#| label: read-in-data

library(tidyverse)

# If purrr is not detected, install the package
if (!"purrr" %in% installed.packages()) install.packages("purrr")

source("https://raw.githubusercontent.com/atheobold/groupworthy-data-science/main/labs/instructions/lab-5-setup.R")
```

## Solve the Crime

### Crime Scene Report

Detective Wickham reaches out to you...

> A crime has taken place and I need your help! There was a murder in SQL City sometime on January 15, 2018. Could you retrieve the crime scene report from the police departmentâ€™s database and follow the clues to find the person responsible for the murder?!


```{r}
#| label: inspecting-crime-scene-report

# Finding the interview of initial suspect

crime_scene_report |>
  mutate(date = ymd(date)) |>
  filter(date == '2018-01-15',
         type == 'murder',
         city == 'SQL City') |>
  pull(description)


witness1 <- person |>
  filter(address_street_name == 'Northwestern Dr', 
         address_number == max(address_number)) |>
  left_join(interview, 
             by = join_by(id == person_id)) |>
  pull(transcript)|>
  print()


witness2 <- person |>
  filter(address_street_name == 'Franklin Ave', 
         str_detect(name, 'Annabel')) |>
  left_join(interview, 
             by = join_by(id == person_id)) |>
  pull(transcript) |>
  print()



get_fit_now_check_in |>
  
  full_join(get_fit_now_member, 
             by = join_by(membership_id == id)) |>
  
  inner_join(person, 
             by = join_by(person_id == id,
                          name == name)) |>
  inner_join(interview,
             by = join_by(person_id == person_id)) |>
  
  inner_join(drivers_license,
             by = join_by(license_id == id)) |>


  filter(membership_status == 'gold',
         str_detect(membership_id, 
                    '^48Z'),
         str_detect(plate_number, 
                    '.H42W')
         ) 

```


```{r}

# Finding who hired Jermey Bowers

suspect <- person |>
  
  inner_join(facebook_event_checkin,
             by = join_by(id == person_id)) |>
  
  inner_join(drivers_license,
             by = join_by(license_id == id)) |>
  
  left_join(income,
             by = join_by(ssn == ssn)) |>
  
  filter(height %in% c(65, 66, 67),
         car_model == 'Model S',
         hair_color == 'red') |>

# Validating the suspect by checking whether an interview exists
  semi_join(interview,
             by = join_by(id == person_id))


```


**Follow the evidence to the person responsible for the murder, building a report as you go.**
Hint: Make sure you check for interviews with any suspects!


## And the final suspect is...

*Put the name of the person responsible for the murder here: Miranda Priestly*
